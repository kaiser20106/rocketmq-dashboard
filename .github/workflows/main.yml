name: Build, Tag and Release RocketMQ Dashboard

on:
  push:
    branches:
      - main
  workflow_dispatch:

jobs:
  build-tag-release:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3
        with:
          fetch-depth: 0

      - name: Generate tag name
        id: tag
        run: |
          TAG=v$(date +'%Y.%m.%d.%H%M%S')
          echo "tag=$TAG" >> $GITHUB_OUTPUT

      - name: Create and push tag
        env:
          TAG: ${{ steps.tag.outputs.tag }}
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          git config user.name "github-actions[bot]"
          git config user.email "github-actions[bot]@users.noreply.github.com"
          git tag $TAG
          git push origin $TAG

      - name: Set up JDK
        uses: actions/setup-java@v3
        with:
          java-version: '17'
          distribution: 'temurin'

    
      # 设置 Node.js，指定正确的工作目录
      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '18.2.0'
          cache: 'npm'
          cache-dependency-path: 'frontend-new/package-lock.json'
      
      # 预先安装 npm 依赖（可选，有助于调试）
      - name: Install npm dependencies
        working-directory: frontend-new
        run: |
          npm install
          
          
      # 检查前端构建环境
      - name: Check frontend build environment
        working-directory: frontend-new
        run: |
          echo "Node.js version: $(node --version)"
          echo "npm version: $(npm --version)"
          echo "Current directory: $(pwd)"
          echo "Package.json exists: $(test -f package.json && echo 'Yes' || echo 'No')"
          if [ -f package.json ]; then
            echo "Build script in package.json:"
            cat package.json | jq '.scripts.build // "Build script not found"'
          fi

      - name: Disable CI checks
        run: echo "CI=false" >> $GITHUB_ENV
        
      # 尝试手动运行前端构建以获取详细错误信息
      - name: Test frontend build
        working-directory: frontend-new
        run: npm run build
      
      
      # 增加详细的构建输出
      - name: Build with Maven
        run: mvn clean package -DskipTests -X

      
      - name: Get version from pom.xml
        id: get_version
        run: |
          VERSION=$(mvn help:evaluate -Dexpression=project.version -q -DforceStdout)
          echo "version=$VERSION" >> $GITHUB_OUTPUT

      - name: Create GitHub Release
        id: create_release
        uses: actions/create-release@v1
        with:
          tag_name: ${{ steps.tag.outputs.tag }}
          release_name: Release ${{ steps.tag.outputs.tag }}
          draft: false
          prerelease: false
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Find built jar file
        id: find_jar
        run: |
          JARFILE=$(ls target/*.jar | head -n 1)
          echo "jarfile=$JARFILE" >> $GITHUB_OUTPUT

      - name: Upload JAR to Release
        uses: actions/upload-release-asset@v1
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ${{ steps.find_jar.outputs.jarfile }}
          asset_name: rocketmq-dashboard-${{ steps.get_version.outputs.version }}.jar
          asset_content_type: application/java-archive
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
