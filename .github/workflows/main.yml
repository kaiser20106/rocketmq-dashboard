name: Build, Tag and Release RocketMQ Dashboard

on:
  push:
    branches:
      - main
  workflow_dispatch:

jobs:
  build-tag-release:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3
        with:
          fetch-depth: 0

      - name: Generate tag name
        id: tag
        run: |
          TAG=v$(date +'%Y.%m.%d.%H%M%S')
          echo "tag=$TAG" >> $GITHUB_OUTPUT

      - name: Create and push tag
        env:
          TAG: ${{ steps.tag.outputs.tag }}
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          git config user.name "github-actions[bot]"
          git config user.email "github-actions[bot]@users.noreply.github.com"
          git tag $TAG
          git push origin $TAG

      - name: Set up JDK
        uses: actions/setup-java@v3
        with:
          java-version: '17'
          distribution: 'temurin'

      # 添加 Node.js 支持
      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '18'
          cache: 'npm'
          cache-dependency-path: '**/package-lock.json'
      
      # 检查前端目录和依赖
      - name: Check frontend structure
        run: |
          echo "=== Checking for frontend directories ==="
          find . -name "package.json" -type f
          find . -name "node_modules" -type d
          echo "=== Checking npm and node versions ==="
          npm --version
          node --version
      
      # 手动安装前端依赖（如果存在）
      - name: Install frontend dependencies
        run: |
          if [ -f "package.json" ]; then
            echo "Found package.json in root, installing dependencies..."
            npm ci
          fi
          for dir in $(find . -name "package.json" -not -path "./node_modules/*" -exec dirname {} \;); do
            if [ "$dir" != "." ]; then
              echo "Installing dependencies in $dir"
              cd "$dir"
              npm ci
              cd - > /dev/null
            fi
          done
        continue-on-error: true
      
      # 增加详细的构建输出
      - name: Build with Maven
        run: mvn clean package -DskipTests -X

      
      - name: Get version from pom.xml
        id: get_version
        run: |
          VERSION=$(mvn help:evaluate -Dexpression=project.version -q -DforceStdout)
          echo "version=$VERSION" >> $GITHUB_OUTPUT

      - name: Create GitHub Release
        id: create_release
        uses: actions/create-release@v1
        with:
          tag_name: ${{ steps.tag.outputs.tag }}
          release_name: Release ${{ steps.tag.outputs.tag }}
          draft: false
          prerelease: false
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Find built jar file
        id: find_jar
        run: |
          JARFILE=$(ls target/*.jar | head -n 1)
          echo "jarfile=$JARFILE" >> $GITHUB_OUTPUT

      - name: Upload JAR to Release
        uses: actions/upload-release-asset@v1
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ${{ steps.find_jar.outputs.jarfile }}
          asset_name: rocketmq-dashboard-${{ steps.get_version.outputs.version }}.jar
          asset_content_type: application/java-archive
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
